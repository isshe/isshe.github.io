<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>读书笔记 on 树深时间录</title><link>https://isshe.site/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link><description>Recent content in 读书笔记 on 树深时间录</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Dec 2021 02:22:19 -0400</lastBuildDate><atom:link href="https://isshe.site/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>图解密码技术 —— 第14章-SSL-TLS</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC14%E7%AB%A0-ssl-tls/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC14%E7%AB%A0-ssl-tls/</guid><description>SSL/TLS为了更安全的通信
什么是SSL/TLS？ 是世界上应用最广泛的密码通信方法。 SSL: Secure Socket Layer. TLS: Transport Layer Security. 相当于SSL的后续版本。 由(下层)TLS记录协议(TLS record protocol)和(上层)TLS握手协议(TLS handshake protocol)这两层协议叠加而成。 TLS记录协议 TLS记录协议负责：消息的压缩、加密、数据的认证。
TLS握手协议 TLS握手协议：加密之外的其他各种操作。 握手协议 密码规格变更协议 警告协议 应用数据协议</description></item><item><title>图解密码技术 —— 第一章-环游密码世界</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%8E%AF%E6%B8%B8%E5%AF%86%E7%A0%81%E4%B8%96%E7%95%8C/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%8E%AF%E6%B8%B8%E5%AF%86%E7%A0%81%E4%B8%96%E7%95%8C/</guid><description>第一章 环游密码世界 名词 明文：加密前的消息。 密文：加密后的消息。 加密：把明文转换为密文的操作。 解密：把密文还原为明文的操作。 破译：接收者以外的人试图将密文还原为明文。 秘钥：加密解密的钥匙。 对称密码：加密、解密使用同一秘钥。 非对称密码：加密、解密使用不同秘钥。（也称为公钥密码） 混合密码系统：结合对称密码和公钥密码的加密方式。 单向散列函数(one-way hash function)：用于保证数据的完整性(integrity)。防篡改。 消息认证码(message authentication code)：用于确认消息是否来自期望的对象。防篡改、防伪装(认证)。 数字签名(digital signature): 防篡改、防伪装、防止否认。 伪随机数生成器(Pseudo Random Number Generator, PRNG): 一种模拟产生随机数的算法。
密码常识 不要使用保密的密码算法 使用低强度的密码比不进行任何加密更危险 任何密码总有一天都会被破解 密码只是信息安全的一部分</description></item><item><title>图解密码技术 —— 第七章-单向散列函数</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B8%83%E7%AB%A0-%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B8%83%E7%AB%A0-%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</guid><description>第七章 单向散列函数 单向散列函数(one-way hash function): 可以根据消息的内容，计算出散列值。
散列值可以被用于检查消息的完整性。 输入：消息(message)；输出：散列值(hash value)。 性质 抗碰撞性：collision resistance，难以发生碰撞。 单向性：one-way，无法通过散列值反算出消息的性质。
术语 单向散列函数：消息摘要函数、哈希函数、杂凑函数。 消息：原像。 散列值：消息摘要、指纹。 完整性：一致性。</description></item><item><title>图解密码技术 —— 第三章-对称密码</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81/</guid><description>对称密码 用相同的秘钥进行加密和解密。
比特序列 编码：将现实中的东西映射为比特序列。 ASCII UTF-8 XOR——异或 XOR: exclusive or, 异或。
异或类似于加密解密过程： 消息A异或秘钥B = X X 异或 B = A 一次性密码本 原理：将明文与一串随机的比特序列进行XOR运算。 无法破解的原因：密文 XOR 破解秘钥得到的有意义明文，可能有多个，无法确定具体是哪个明文。
DES DES: Data Encryption Standard。
美国联邦信息处理标准中采用的一种对称密码。 一种将64bit明文加密成64bit密文的对称密码算法。 秘钥长度是56bit。（实际64bit，但由于每隔7bit设置一个错误检查bit，因此是56bit） 如果明文长于64bit，则需要迭代加密。 差分分析 思路：改变一部分明文并分析密文如何随之改变。
线性分析 思路：将明文和密文的一些对应比特进行XOR并计算其结果为0的概率。
三重DES 3DES(TDEA)：将DES重复3次。 分组长度为：64 * 3 = 192
AES 分组长度为：128</description></item><item><title>图解密码技术 —— 第九章-数字签名</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</guid><description>数字签名 公钥密码：存在加密秘钥(公钥)和解密秘钥（私钥）。用公钥加密。 数字签名：签名秘钥（私钥）和验证秘钥（公钥）。用私钥加密。 数字签名并不是为了保证机密性。
签名的生成和验证 签名秘钥：私钥。用于对消息进行签名——生成签名。只能一人持有。 验证秘钥：公钥。用于验证消息的签名——验证签名。可以多人持有。
对消息签名的过程 A用自己的私钥进行加密。 A将签名和消息发送给B。 B用A的公钥进行解密（签名验证）。 B将解密后的消息与A发过来的消息进行对比。一致，则验证成功，否则，验证失败。 对消息散列值签名的过程 公钥密码算法较慢，如果直接对消息进行签名，会比较耗时。
A用单向散列函数计算消息的散列值。 A用私钥对散列值进行加密。 A将消息和签名发送给B。 B用A的g公钥对收到的签名进行解密。 B将签名解密后得到的散列值与A发送的消息的散列值进行对比。一致，验证成功，否则，验证失败。 应用场景 信息公告 确保是目标组织发布的目标公告，法制被篡改。 软件下载 软件下载完成后，验证签名，防止软件遭到篡改。（并不能检测软件是否是恶意的） 公钥证书。 验证数字签名时，需要合法的公钥。对公钥进行签名得到的就是公钥证书。【第三方？？？】 SSL/TLS。 使用服务器证书验证服务器身份。 服务器证书：加上数字签名的服务器公钥。 总结 对称密码的秘钥是机密性的精华，单向散列函数的散列值是完整性的精华。</description></item><item><title>图解密码技术 —— 第二章-历史上的密码</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%8E%86%E5%8F%B2%E4%B8%8A%E7%9A%84%E5%AF%86%E7%A0%81/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%8E%86%E5%8F%B2%E4%B8%8A%E7%9A%84%E5%AF%86%E7%A0%81/</guid><description>第二章 历史上的密码 历史上著名的密码 凯撒密码 简单替换密码 Enigma 破译方法 暴力攻击 频率分析 凯撒密码 通过将明文中使用的字母表&amp;quot;平移&amp;quot;来进行加密。 秘钥空间：26 破解方式：直接暴力破解。
简单替换密码 更改26个字母的对应关系。如A表示X（A不再是A）。 秘钥空间：26 x 25 x 24 x &amp;hellip; x 1 = 403291461126605635584000000 破解方式：频率分析 Enigma 略</description></item><item><title>图解密码技术 —— 第五章-公钥密码</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81/</guid><description>第五章 公钥密码 秘钥配送问题 解决方法 事先共享秘钥 密钥分配中心 Diffie-Hellman密钥交换 公钥密码 RSA RSA是一种公钥密码算法。名字来源于三位作者的姓。
Ron Rivest、Adi Shamir、Leonard Adleman RSA加密 密文 = 明文 ^ E mode N 在RSA中，明文、密钥、密文都是数字。 密文等于明文的E次方对N取模） E = Encryption N = Number E和N的组合就是公钥。 RSA解密 明文 = 密文 ^ D mod N D = Decryption N = Number D和N的组合就是私钥。 求N N = p x q p和q是质数，由伪随机数生成器生成。 求L L = lcm(p - 1, q - 1) lcm：取最小公倍数 求E 1 &amp;lt; E &amp;lt; L gcd(E, L) = 1 gcd: 最大公约数 E和L最大公约数是1（互质） 求D 1 &amp;lt; D &amp;lt; L E x D mode L = 1 中间人攻击 攻击方式： A和B用公钥密码通讯。 中间人X对A冒充B，对B冒充A。 中间人攻击对所有公钥密码对是有效的。</description></item><item><title>图解密码技术 —— 第八章-消息认证码</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81/</guid><description>消息认证码-消息被正确传送了吗 消息认证码： Message Authentication Code，MAC。
是一种确认完整性并进行认证的技术。 是一种与秘钥相关联的单向散列函数。 输入：任意长度的消息 + 共享秘钥。 输出：固定长度的数据。 消息认证码使用的秘钥必须是密码学安全的、高强度的伪随机生成器。如果是人为选定，则会增加秘钥被推测的风险 消息验证码能与不能 不能保证消息的机密性； 不能防止否认； 能识别出篡改行为； 能对消息进行认证；（合法） 消息验证码的局限性 无法防止否认； 无法防止否认的本质是：相同的秘钥有多于1个人获得。</description></item><item><title>图解密码技术 —— 第六章-混合密码系统</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%85%AD%E7%AB%A0-%E6%B7%B7%E5%90%88%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%85%AD%E7%AB%A0-%E6%B7%B7%E5%90%88%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F/</guid><description>第六章 混合密码系统 用对称密码提高速度，用公钥密码保护会话密钥。
对称密码：用于加密消息/数据。 公钥密码：用于加密密钥/会话密钥。 对称密码和公钥密码的密钥长度必须具备同等强度。 考虑长期运用时，公钥密码的强度应该要高于对称密码。 因为对称密码的会话密钥被破解，只会影响到本次通信，而公钥被破译，会影响过去到未来所有通信内容。 密钥强度对比：
对称密码AES 公钥密码RSA 128 3072 192 7680 256 15360 问题 对称密码： 密钥传送问题 公钥密码： 中间人攻击 速度慢 混合密码加密过程 混合密码加密过程
混合密码解密过程 混合密码解密过程</description></item><item><title>图解密码技术 —— 第十一章-秘钥</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0-%E7%A7%98%E9%92%A5/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0-%E7%A7%98%E9%92%A5/</guid><description>第11章 秘钥——秘密的精华 什么是秘钥？ 秘钥：一个巨大的数字。
数字本身的大小不重要，重要的是秘钥空间的大小。 秘钥与明文是等价的。
常见的秘钥？ DES秘钥：实质长度56bit(7bytes)。 DES-EDE2秘钥：实质长度112bit(14bytes)。 DES-EDE3秘钥：实质长度168bit(21bytes)。 AES秘钥：128/192/256bit 如何管理秘钥？ 需要清楚：信息的机密性不应该依赖于密码算法本身，而是应该依赖于妥善保管的秘钥。
生成秘钥： 用随机数生成秘钥； 密码学用途的伪随机数生成器必须是专门针对密码学用途而设计的。 用口令生成秘钥； 配送秘钥： 事先共享秘钥; 更新秘钥： 定期更新，例如每发送1000字节数据更新一次。 更新方式：将当前秘钥的散列值作为下一个秘钥。 这种防止破译过去的通信内容的机制，称为向后安全。
保存秘钥
对秘钥进行加密：有助于减少需要保管的秘钥数量。 作废秘钥
为什么要作废秘钥？ 不再需要的秘钥及时作废，防止被解密。 如何作废秘钥？ 彻底删除秘钥。 秘钥的分类？ 对称、非对称。 用于认证、用于机密性。 Diffie-Hellman秘钥交换 实际并没有交换秘钥，而是通过计算生成相同的秘钥，因此也称为Diffie-Hellman秘钥协商。 什么是基于口令的密码(password based Encryption, PBE)？ 根据口令生成秘钥，再用秘钥进行加密的方法。 KEK：通过口令生成的秘钥。 CEK：通过随机数生成器生成的秘钥。 什么是盐？盐的作用是什么？ 盐：伪随机数生成器生成的随机数，和口令一起通过单向散列函数生成秘钥(KEK)。 作用：用来防御字典攻击。 字典攻击：准备大量候选KEK，逐一进行尝试。 什么是拉伸？ 拉伸：讲单向散列函数进行多次迭代的方法。 通过拉伸可以改良PBE。 如何生成安全的口令？ 使用只有自己才能知道的信息。（大原则） 不要使用对自己重要的事物的名字。 不要使用关于自己的信息。 不要使用别人见过的信息。 将多个不同的口令分开使用。 有效利用笔记。 理解口令的局限性。 当对口令字符/长度进行限制时，秘钥的长度(bit)并不太长，可能可以通过暴力破解。 使用口令生成器和管理工具。</description></item><item><title>图解密码技术 —— 第十三章-PGP</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0-pgp/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0-pgp/</guid><description>PGP——密码技术的完美组合 什么是PGP？ PGP: Pretty Good Privacy. 是Philip Zimmermann编写的密码软件。 PGP有什么用？ 可以保护处于极端状况(如:性命攸关)下的人们的隐私。 什么是OpenGPG？ OpenGPG：对秘闻和数字签名进行定义的标准规范：RFC1991/RFC2440/RFC4880/RFC5581/RFC6637。 GUN遵照OpenGPG(RFC4880)规范编写了GnuPG自由软件。 什么是信任网？ PGP采用的确认公钥合法性的方法。 注意：公钥是否合法和所有者是否可信是两个不同的问题，因为尽管公钥合法，其所有者也可以是不可信的。</description></item><item><title>图解密码技术 —— 第十二章-随机数</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0-%E9%9A%8F%E6%9C%BA%E6%95%B0/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0-%E9%9A%8F%E6%9C%BA%E6%95%B0/</guid><description>第12章 随机数——不可预测性的源泉 随机数的作用？使用场景是什么？ 生成秘钥：用于对称密码和消息认证码。 生成秘钥对：用于公钥密码和数字签名。 生成初始化向量(IV)：用于分组密码的CBC/CFB/OFB模式。 生成nonce：用于防御重放共计以及分组密码的CTR模式等。 生成盐：用于基于口令的密码等。 随机数的性质 随机性——不存在统计学偏差，是完全杂乱的数列。 不可预测性——不能从过去的数列推测下一个出现的数。 不可重现性——除非将数列本身保存下来，否则不能重现相同的数列。 以上3个性质，越往下越严格。 随机数强度 弱伪随机数：只有随机性。 强伪随机数：具有随机性+不可预测性。 真随机数：同时具备上面三个性质。</description></item><item><title>图解密码技术 —— 第十章-证书</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E7%AB%A0-%E8%AF%81%E4%B9%A6/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%8D%81%E7%AB%A0-%E8%AF%81%E4%B9%A6/</guid><description>证书——为公钥加上数字签名 这章不是太理解。
什么是证书？ 证书：记录个人信息及公钥，并由认证机构施加数字签名. 证书是公钥证书的简称。
证书的应用场景？ 什么是公钥基础设施？ 公钥基础设施(PKI, Public-key Infrastructure): 为了能更有效运用公钥而制定的一系列规范和规格的总称。
公钥基础设置（PKI）的组成要素是什么？ 用户：使用PKI的人。 认证机构：颁发证书的人。 仓库：保存证书的数据库。 为什么需要证书？</description></item><item><title>图解密码技术 —— 第四章-分组密码的模式</title><link>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%9A%84%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 25 Dec 2021 02:22:19 -0400</pubDate><guid>https://isshe.site/p/%E5%9B%BE%E8%A7%A3%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF-%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%9A%84%E6%A8%A1%E5%BC%8F/</guid><description>第四章 分组密码的模式 DES和AES都属于分组密码，它们只能加密固定长度的明文。 如果需要加密任意长度的明文，则需进行迭代，而分组密码的迭代方法，就称为分组密码的模式。
分组密码与流密码 密码算法可以分为分组密码和流密码。 流密码：一次性密码本 分组密码：DES、AES、3DES等大多数堆成密码算法。
模式分类 ECB：Electronic CodeBook mode，电子密码本模式。 CBC：Cipher Block Chaining mode，密码分组链接模式。 CFB：Cipher FeedBack mode，密文反馈模式。 OFB：Output FeedBack mode，输出反馈模式。 CTR：CounTeR mode，计数器模式。 GCM：Galois/Counter Mode, 。 初始化向量 由于加密第一个分组时，不存在“前一个密文分组”，因此事先准备一个长度为一个分组的bit序列来代替。此序列称为初始化向量(Initialization Vector, IV)
初始化向量必须使用不可预测的随机数。 ECB模式 电子密码本模式：切割明文为多个分组，逐个加密。（容易有安全漏洞，不要使用）
加解密过程图示 加解密过程图示 CBC模式 密码分组链接模式：密文分组像链条一样互相连接在一起。（前一个密文分组用于后一个分组的加密）
特点 无法直接对中间分组进行加密。 一个密文分组损坏，解密时最多只有两个明文分组受影响。（在密文长度没变的情况下） 加解密过程图示 加解密过程图示 CFB模式 密文反馈模式：前一个密文分组被送到密码算法的输入端，用于生成下一个密文分组。
特点 依赖上一个密文分组。 加解密过程图示 加解密过程图示 OFB模式 输出反馈模式：加密算法的输出作为下一个分组加密算法的输入。</description></item></channel></rss>